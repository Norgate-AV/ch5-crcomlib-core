name: CI

on:
  workflow_dispatch:
    inputs:
      new_release:
        type: boolean
        description: Force Release
        default: false
      dont_update:
        type: boolean
        description: Don't Update
        default: true
      dont_archive:
        type: boolean
        description: Don't Archive
        default: true
      dont_release:
        type: boolean
        description: Don't Release
        default: true
      dont_publish:
        type: boolean
        description: Don't Publish
        default: true

  # schedule:
  #   - cron: "0 18 * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      APP_NAME: ch5-crcomlib
      ASSETS_REPOSITORY: ${{ github.repository }}
      VERSIONS_REPOSITORY: ${{ github.repository_owner }}/versions
      CH5_LATEST: ${{ github.event.inputs.dont_update == 'true' && 'no' || 'yes' }}
      SHOULD_BUILD: ${{ github.event.inputs.new_release == 'true' && 'yes' || 'no' }}
      SHOULD_PUBLISH: "no"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: Install
        run: pnpm install

      - name: Show Environment
        run: env | sort

      - name: Get Remote
        run: . get_repo.sh

      - name: Check Version
        run: . check_version.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_RELEASE: ${{ github.event.inputs.new_release }}
          IS_SPEARHEAD: "yes"

      - name: Build
        if: env.SHOULD_BUILD == 'yes'
        run: ./build.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        if: env.SHOULD_BUILD == 'yes'
        run: ./test.sh

      - name: Update Version
        if: env.SHOULD_BUILD == 'yes' && github.event.inputs.dont_update != 'true'
        run: ./update_version.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}

      - name: Archive
        if: env.SHOULD_BUILD == 'yes' && github.event.inputs.dont_archive != 'true'
        run: ./archive.sh

      - name: Release
        if: env.SHOULD_BUILD == 'yes' && github.event.inputs.dont_release != 'true'
        run: ./release.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}

      - name: Publish
        if: env.SHOULD_PUBLISH == 'yes' && github.event.inputs.dont_publish != 'true'
        run: ./publish.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
